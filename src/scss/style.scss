$Red: #ff0000;
$Yellow: #ffc300;
$Green: #00aa2d;
$Blue: #005fff;
$Orange: #ff8c00;
$Purple: #800080;

$colors: $Red, $Yellow, $Green, $Blue, $Orange, $Purple;

$title-height: 60px;

$youtube-triangle-height: 50px;

@keyframes fadeFalf {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 0.5;
  }
}

@keyframes animFirst {
  0% {
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dashoffset: var(--max);
  }
  100% {
    stroke-dashoffset: var(--max);
  }
}

@keyframes animSecond {
  0% {
    stroke-dashoffset: 0;
  }
  40% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: var(--max);
  }
}

@keyframes buttonAnimation {
  0% {
    opacity: 1;
    transform: translateX(var(--moveFromX));
  }
  100% {
    opacity: 0;
    transform: translateX(var(--moveToX));
  }
}

@keyframes animateLiTcolor {
  0% {
    color: $Red;
  }
  20% {
    color: $Yellow;
  }
  40% {
    color: $Green;
  }
  60% {
    color: $Blue;
  }
  80% {
    color: $Orange;
  }
  90% {
    color: $Purple;
  }
  100% {
    color: $Red;
  }
}

@keyframes animateLiTBGcolor {
  0% {
    background-color: $Red;
  }
  20% {
    background-color: $Yellow;
  }
  40% {
    background-color: $Green;
  }
  60% {
    background-color: $Blue;
  }
  80% {
    background-color: $Orange;
  }
  90% {
    background-color: $Purple;
  }
  100% {
    background-color: $Red;
  }
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  position: relative;
  background: #fff;
  font-family: 游ゴシック体, "Yu Gothic", YuGothic, "ヒラギノ角ゴシック Pro",
    "Hiragino Kaku Gothic Pro", メイリオ, Meiryo, Osaka, "ＭＳ Ｐゴシック",
    "MS PGothic", Arial, sans-serif;
}

body.loaded {
  #loading {
    display: none;
  }
  #mark {
    transform: translateX(0) !important;
  }
  #logo {
    transform: translateX(-0);
    opacity: 1;
  }
  header {
    #music {
      opacity: 1;
    }
    a[href="#main"] {
      display: block;
      animation: fadeFalf 0.6s ease 1s infinite alternate;
    }
  }
}

#loading {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background: #fff;
  z-index: 999;
  opacity: 100;
  transition: 0.4s;
  #loading-message {
    position: absolute;
    bottom: 20%;
    font-weight: bold;
    text-align: center;
    width: 100%;
    opacity: 0.5;
  }
  img {
    height: $title-height;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

#navigations {
  $length: length($colors);
  @each $color in $colors {
    $key: index($colors, $color);
    > .year:nth-child(#{$length}n + #{$key}) {
      background: $color;
      border-color: $color;
      > a > .inneryear {
        color: $color;
      }
      > .outerCamp {
        background: $color;
      }
    }
  }
  position: fixed;
  display: flex;
  align-items: flex-end;
  flex-direction: column;
  top: 50%;
  transform: translateY(-50%);
  right: 1em;
  z-index: 4;
  font-size: 0.75em;
  padding: 0;
  margin: 0;
  > .year {
    cursor: pointer;
    position: relative;
    line-height: 1.5;
    transition: 0.4s;
    box-sizing: content-box;
    width: calc(var(--width, 0px) + 1.5em);
    height: 1.5em;
    margin: 0.5em 0;
    border-radius: calc(0.75em + 2px);
    color: #fff;
    border: solid 2px;
    &.full-opened > .outerCamp {
      visibility: visible;
    }
    &:hover,
    &.opened,
    &.full-opened {
      background: #fff;
    }
    > a {
      width: 100%;
      display: flex;
      overflow: hidden;
      right: 0;
      flex-direction: row-reverse;
      flex-shrink: 0;
      > span {
        width: 1.5em;
        text-align: center;
        color: white;
        flex-shrink: 0;
      }
      > .inneryear {
        padding: 0 0 0 1em;
        flex-grow: 1;
        white-space: nowrap;
      }
    }
    > .outerCamp {
      transition: inherit;
      box-sizing: content-box;
      position: absolute;
      height: 0;
      overflow: hidden;
      visibility: hidden;
      left: -2px;
      top: 0.75em;
      padding: 0.5em;
      z-index: -1;
      border-radius: 0 0 0.75em 0.75em;
      transition-delay: 0.4s;
      > .camp {
        white-space: nowrap;
        transform: translateY(0.5em);
        border-top: solid 1px #fff;
        transition: inherit;
        &:first-child {
          border: none;
        }
        &:hover {
          background: rgba(255, 255, 255, 0.5);
        }
        > a {
          padding: 0.3em;
          color: #fff;
          display: block;
        }
      }
    }
  }
}

header {
  width: 100%;
  height: 100%;
  position: relative;
  h1 {
    flex-wrap: wrap;
    display: flex;
    justify-content: center;
    height: $title-height;
    position: absolute;
    top: calc(50% - (#{$title-height} / 2));
    left: 0;
    width: 100%;
    padding: 0;
    margin: 0;
    font-size: $title-height;
    line-height: $title-height;
    img {
      height: $title-height;
      &:not(#mark) {
        transition: 1s;
      }
    }
    #logo {
      transform: translateX(-100%);
      opacity: 0;
    }
    #music {
      opacity: 0;
    }
  }
  a[href="#main"] {
    left: 50%;
    color: #000;
    text-decoration: none;
    opacity: 0;
    position: absolute;
    bottom: 25%;
    transform: translate(-50%, 50%);
    text-align: center;
    img {
      height: 1em;
    }
    &:hover {
      animation-play-state: paused;
    }
  }
}

main {
  .youtube {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 30px;
    height: 0;
    overflow: hidden;
    background: #000;
    > *:not(a) {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 2;
    }

    > .play {
      cursor: pointer;
      transition: 0.2s;
      background: rgba(0, 0, 0, 0);
      &:after {
        transition: 0.2s;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        content: "";
        width: 0;
        height: 0;
        border-width: calc($youtube-triangle-height / 2) 0
          calc($youtube-triangle-height / 2) $youtube-triangle-height * 0.866;
        border-color: transparent;
        border-style: solid;
      }

      &:hover {
        background: rgba(0, 0, 0, 0.3);
      }
    }

    a {
      color: #fff;
      font-weight: bold;
      position: absolute;
      bottom: 0;
      right: 0;
      opacity: 0.5;
      z-index: 2;
      &:hover {
        opacity: 0.7;
      }
      img {
        height: 24px;
        margin: 12px;
      }
    }

    iframe {
      z-index: 3;
      border: none;
    }
  }

  $length: length($colors);
  @each $color in $colors {
    $key: index($colors, $color);
    section:nth-child(#{$length}n + #{$key}) > .youtube > .play:after {
      border-left-color: $color;
    }
    .parallax.noimage:nth-child(#{$length}n + #{$key}) {
      background-color: lighten($color, 20%);
    }
  }

  h2 {
    font-size: 2em;
    text-align: center;
  }
  h3 {
    width: calc(100% - 2em);
    max-width: 600px;
    margin: 1em auto;
    font-size: 1.3em;
    .camp-theme {
      position: relative;
      padding-left: 3.5em;
      margin: 0.2em 0;
      display: block;
      font-size: 0.7em;
      font-weight: normal;
      opacity: 0.6;
      font-style: italic;
      &:before {
        position: absolute;
        top: 0.6em;
        left: 0.75em;
        content: "";
        display: inline-block;
        height: 0;
        width: 2em;
        border-top: solid 1px;
        margin: 0 0.25em;
      }
    }
  }
  .parallax {
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
    &.noimage {
      background-size: contain;
    }
    display: flex;
    flex-direction: column;
  }
  section {
    width: calc(100% - 2em);
    max-width: 600px;
    box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.5);
    margin: 2em auto;
    background: white;
    border-radius: 2px;
    padding: 1px 0;
    background-clip: content-box;
    p,
    h4 {
      margin: 1em 1em;
    }
    h4 small:before {
      content: "";
      display: inline-block;
      width: 1em;
    }
  }
}

footer {
  height: 100%;
  width: 100%;
  position: relative;
  font-size: 1.5em;
  line-height: 1.5em;
  background: #fff;
  div {
    width: 100%;
    position: absolute;
    top: 50%;
    text-align: center;
    transform: translateY(-50%);
    a.github {
      position: relative;
      display: inline-block;
      height: 100%;
      text-decoration: none;
      color: #111;
      padding: 10px 0;
      box-sizing: border-box;
      img {
        height: 1em;
      }
      &:hover,
      &:focus {
        text-decoration: none;
        color: #000;
        &:after,
        &:after {
          -webkit-transform: scaleX(1);
          -ms--transform: scaleX(1);
          transform: scaleX(1);
          cursor: pointer;
        }
      }
      &:after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        -webkit-transform: scaleX(0);
        -ms-transform: scaleX(0);
        background-color: #111;
        -webkit-transition: all 0.3s ease;
        transition: all 0.3s ease;
      }
    }
  }
}

#thanks {
  line-height: 1;
  font-size: 3em;
}

a:hover,
a:focus {
  color: $Red;
}
a:hover {
  cursor: pointer;
}
a {
  -webkit-transition: all 0.25s ease-out;
  -moz-transition: all 0.25s ease-out;
  -ms-transition: all 0.25s ease-out;
  -o-transition: all 0.25s ease-out;
  transition: all 0.25s ease-out;
}
a {
  color: $Blue;
  text-decoration: none;
  line-height: inherit;
}

.modal {
  transition: 0.5s;
  box-sizing: border-box;
  position: fixed;
  bottom: 100%;
  left: 0;
  right: 0;
  height: calc(100vh - 60px);
  width: calc(100% - 2em);
  max-width: 500px;
  margin: 0 auto;
  padding: 2em;
  border-radius: 0.5em;
  background: #fff;
  z-index: 3;
  opacity: 0;
  > .inner {
    overflow: auto;
    height: 100%;
  }
  .close-button {
    color: $Red;
    font-size: 1.5em;
    position: absolute;
    top: 1em;
    right: 1em;
  }
}

#modal-overlay {
  transition: 0.5s;
  background: rgba(0, 0, 0, 0.5);
  height: 100%;
  width: 100%;
  z-index: 2;
  position: fixed;
  bottom: 100%;
  opacity: 0;
  left: 0;
}

.modal.open {
  bottom: 30px;
  opacity: 1;
  ~ #modal-overlay {
    bottom: 0;
    opacity: 1;
  }
}

.player {
  position: fixed;
  bottom: 0;
  width: 100%;
  height: 4em;
  background: #fff;
  display: flex;
  z-index: 5;
  transform: translateY(100%);
  transition: 0.3s;
  &.show {
    box-shadow: 0 0 3px 3px rgba(0, 0, 0, 0.5);
    transform: none;
    .balloon.opened {
      transform: translateY(-2em) scale(1);
    }
  }
  .playing {
    flex: 1;
    display: flex;
    min-width: 200px;
    height: 100%;
    .thumb {
      padding: 10px;
      height: 100%;
    }
    > span {
      overflow: auto;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }
  }
  .setting {
    min-width: 0;
    flex: 1;
    position: relative;
    .toggle-setting {
      position: absolute;
      height: 100%;
      font-size: 1.5em;
      padding: 0 1em;
      right: 0;
      margin: 0;
    }
    .balloon {
      position: absolute;
      bottom: 100%;
      right: 1em;
      padding: 0.5em;
      border-radius: 0.5em;
      background: #fff;
      border: solid 1px #333;
      transform: translateX(0) scale(0);
      transform-origin: bottom right;
      transition: 0.2s;
      &:before {
        content: "";
        position: absolute;
        display: block;
        height: 1em;
        width: 1em;
        background: #fff;
        border: solid 1px #333;
        border-style: none solid solid none;
        top: 100%;
        right: 0.5em;
        transform: rotate(45deg) translate(-0.5em, -0.2em);
      }
      label {
        > input[type="checkbox"] {
          display: none;
          &:checked {
            ~ .checkbox-bg {
              animation: animateLiTBGcolor 20s infinite;
              border: none;
              background-clip: border-box;
              > i {
                width: 100%;
              }
            }
          }
        }
        .checkbox-bg {
          display: inline-block;
          margin-right: 1em;
          height: 1em;
          width: 1em;
          animation: animateLiTcolor 20s infinite;
          border-radius: 0.2em;
          box-sizing: border-box;
          border: solid 2px;
          padding: 1px;
          transition: 0.2s;
          vertical-align: middle;
          > i {
            color: #fff;
            width: 0;
            overflow: hidden;
            transition: 0.2s;
            font-size: calc(1em - 2px);
            vertical-align: top;
          }
        }
      }
    }
  }
  .controller {
    align-self: center;
    font-size: 2em;
    display: flex;
    align-items: center;
  }
  * {
    outline: none;
  }
  button {
    animation: animateLiTcolor 20s infinite;
    margin: 0.25em;
    line-height: 1;

    &:hover {
      cursor: pointer;
      opacity: 0.8;
    }
    .shadow {
      position: absolute;
      transform: translateX(var(--moveFromX));
    }
    &.next .shadow {
      --moveFromX: -100%;
      --moveToX: 0;
    }
    &.back .shadow {
      --moveFromX: -100%;
      --moveToX: -200%;
    }
    &:active .shadow {
      animation: buttonAnimation 0.3s both;
    }
    &.toggle {
      padding: 0;
      background: none;
      border: none;
      height: 1em;
      width: 1em;
      display: block;
      overflow: hidden;
      position: relative;
      .left {
        height: 100%;
        float: left;
        width: 36%;
        transition: all 0.25s ease;
        overflow: hidden;
        animation: animateLiTBGcolor 20s infinite;
      }
      .triangle-1 {
        transform: translate(0, -100%);
      }
      .triangle-2 {
        transform: translate(0, 100%);
      }
      .triangle-1,
      .triangle-2 {
        position: absolute;
        top: 0;
        right: 0;
        background-color: transparent;
        width: 0;
        height: 0;
        border-right: 1em solid #fff;
        border-top: 0.5em solid transparent;
        border-bottom: 0.5em solid transparent;
        transition: transform 0.25s ease;
      }
      .right {
        height: 100%;
        float: right;
        width: 36%;
        animation: animateLiTBGcolor 20s infinite;
        transition: all 0.25s ease;
      }
      &.paused {
        .left {
          width: 50%;
        }
        .right {
          width: 50%;
        }
        .triangle-1 {
          transform: translate(0, -50%);
        }
        .triangle-2 {
          transform: translate(0, 50%);
        }
      }
    }
  }
}

.colorful,
h2 {
  span:nth-child(6n + 1) {
    color: $Red;
  }
  span:nth-child(6n + 2) {
    color: $Blue;
  }
  span:nth-child(6n + 3) {
    color: $Green;
  }
  span:nth-child(6n + 4) {
    color: $Yellow;
  }
  span:nth-child(6n + 5) {
    color: $Orange;
  }
  span:nth-child(6n) {
    color: $Purple;
  }
}
